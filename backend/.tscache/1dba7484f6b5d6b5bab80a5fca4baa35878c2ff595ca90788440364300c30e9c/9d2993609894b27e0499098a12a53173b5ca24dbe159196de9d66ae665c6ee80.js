"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IssuesFactory = void 0;
exports.IssuesFactory = (sequelize, DataTypes) => {
    const attributes = {
        id: {
            type: DataTypes.INTEGER(11),
            allowNull: false,
            primaryKey: true,
            autoIncrement: true
        },
        categorie: {
            type: DataTypes.STRING(255),
            allowNull: false
        },
        subject: {
            type: DataTypes.STRING(255),
            allowNull: false
        },
        description: {
            type: DataTypes.TEXT,
            allowNull: false
        },
        status: {
            type: DataTypes.ENUM('New', 'In progress', 'Resolved', 'Feed back', 'closed', 'rejected'),
            allowNull: false
        },
        priority: {
            type: DataTypes.ENUM('Low', 'Normal', 'High', 'Urgent', 'Immediate'),
            allowNull: false
        },
        start_date: {
            type: DataTypes.DATE,
            allowNull: false
        },
        due_date: {
            type: DataTypes.DATE,
            allowNull: false
        },
        estimated_time: {
            type: DataTypes.INTEGER(11),
            allowNull: false
        },
        progress: {
            type: DataTypes.INTEGER(11),
            allowNull: false
        },
        file: {
            type: DataTypes.STRING(255),
            allowNull: false
        },
        spent_time: {
            type: DataTypes.INTEGER(11),
            allowNull: false
        },
        activity: {
            type: DataTypes.ENUM('Development', 'Design'),
            allowNull: false
        },
        updated_by: {
            type: DataTypes.STRING(255),
            allowNull: false
        },
        links: {
            type: DataTypes.STRING(255),
            allowNull: false
        },
        createdAt: {
            type: DataTypes.DATE,
            allowNull: false
        },
        updatedAt: {
            type: DataTypes.DATE,
            allowNull: false
        }
    };
    const Issues = sequelize.define('issues', attributes, {
        freezeTableName: true
    });
    //   issues.associate = (models) => {
    //     issues.hasMany(models.Membersissues, {
    //       foreignKey: 'issues_id'
    //     });
    //   };
    return Issues;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYmFzc2VtL0RvY3VtZW50cy9QZXJzb25uZWxfUHJvamVjdC9idWctbWFzdGVyL2JhY2tlbmQvc2VydmVyL21vZGVscy10cy9Jc3N1ZXMudHMiLCJzb3VyY2VzIjpbIi9ob21lL2Jhc3NlbS9Eb2N1bWVudHMvUGVyc29ubmVsX1Byb2plY3QvYnVnLW1hc3Rlci9iYWNrZW5kL3NlcnZlci9tb2RlbHMtdHMvSXNzdWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQTBCYSxRQUFBLGFBQWEsR0FBRyxDQUMzQixTQUE4QixFQUM5QixTQUE4QixFQUNvQixFQUFFO0lBQ3BELE1BQU0sVUFBVSxHQUF5QztRQUN2RCxFQUFFLEVBQUU7WUFDRixJQUFJLEVBQUUsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDM0IsU0FBUyxFQUFFLEtBQUs7WUFDaEIsVUFBVSxFQUFFLElBQUk7WUFDaEIsYUFBYSxFQUFFLElBQUk7U0FDcEI7UUFDRCxTQUFTLEVBQUU7WUFDVCxJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7WUFDM0IsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFDRCxPQUFPLEVBQUU7WUFDUCxJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7WUFDM0IsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFDRCxXQUFXLEVBQUU7WUFDWCxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7WUFDcEIsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFDRCxNQUFNLEVBQUU7WUFDTixJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUksQ0FDbEIsS0FBSyxFQUNMLGFBQWEsRUFDYixVQUFVLEVBQ1YsV0FBVyxFQUNYLFFBQVEsRUFDUixVQUFVLENBQ1g7WUFDRCxTQUFTLEVBQUUsS0FBSztTQUNqQjtRQUNELFFBQVEsRUFBRTtZQUNSLElBQUksRUFBRSxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxXQUFXLENBQUM7WUFDcEUsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFFRCxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7WUFDcEIsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFDRCxRQUFRLEVBQUU7WUFDUixJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7WUFDcEIsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFDRCxjQUFjLEVBQUU7WUFDZCxJQUFJLEVBQUUsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDM0IsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFDRCxRQUFRLEVBQUU7WUFDUixJQUFJLEVBQUUsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDM0IsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFDRCxJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7WUFDM0IsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFDRCxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDM0IsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFDRCxRQUFRLEVBQUU7WUFDUixJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsUUFBUSxDQUFDO1lBQzdDLFNBQVMsRUFBRSxLQUFLO1NBQ2pCO1FBQ0QsVUFBVSxFQUFFO1lBQ1YsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDO1lBQzNCLFNBQVMsRUFBRSxLQUFLO1NBQ2pCO1FBQ0QsS0FBSyxFQUFFO1lBQ0wsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDO1lBQzNCLFNBQVMsRUFBRSxLQUFLO1NBQ2pCO1FBRUQsU0FBUyxFQUFFO1lBQ1QsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJO1lBQ3BCLFNBQVMsRUFBRSxLQUFLO1NBQ2pCO1FBQ0QsU0FBUyxFQUFFO1lBQ1QsSUFBSSxFQUFFLFNBQVMsQ0FBQyxJQUFJO1lBQ3BCLFNBQVMsRUFBRSxLQUFLO1NBQ2pCO0tBQ0YsQ0FBQztJQUVGLE1BQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQzdCLFFBQVEsRUFDUixVQUFVLEVBQ1Y7UUFDRSxlQUFlLEVBQUUsSUFBSTtLQUN0QixDQUNGLENBQUM7SUFFRixxQ0FBcUM7SUFDckMsNkNBQTZDO0lBQzdDLGdDQUFnQztJQUNoQyxVQUFVO0lBQ1YsT0FBTztJQUVQLE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xuXG5pbXBvcnQgeyBTZXF1ZWxpemVBdHRyaWJ1dGVzIH0gZnJvbSAnLi4vdHlwaW5ncy9TZXF1ZWxpemVBdHRyaWJ1dGVzJztcbmV4cG9ydCBpbnRlcmZhY2UgaXNzdWVzQXR0cmlidXRlIHtcbiAgaWQ6IG51bWJlcjtcbiAgY2F0ZWdvcmllOiBzdHJpbmc7XG4gIHN1YmplY3Q6IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHN0YXR1czogc3RyaW5nO1xuICBwcmlvcml0eTogc3RyaW5nO1xuICBzdGFydF9kYXRlOiBEYXRlO1xuICBkdWVfZGF0ZTogRGF0ZTtcbiAgZXN0aW1hdGVkX3RpbWU6IG51bWJlcjtcbiAgcHJvZ3Jlc3M6IG51bWJlcjtcbiAgZmlsZTogc3RyaW5nO1xuICBzcGVudF90aW1lOiBudW1iZXI7XG4gIGFjdGl2aXR5OiBzdHJpbmc7XG4gIHVwZGF0ZWRfYnk6IHN0cmluZztcbiAgbGlua3M6IHN0cmluZztcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1cGRhdGVkQXQ6IERhdGU7XG59XG5leHBvcnQgaW50ZXJmYWNlIGlzc3Vlc0luc3RhbmNlXG4gIGV4dGVuZHMgU2VxdWVsaXplLkluc3RhbmNlPGlzc3Vlc0F0dHJpYnV0ZT4sXG4gICAgaXNzdWVzQXR0cmlidXRlIHt9XG5cbmV4cG9ydCBjb25zdCBJc3N1ZXNGYWN0b3J5ID0gKFxuICBzZXF1ZWxpemU6IFNlcXVlbGl6ZS5TZXF1ZWxpemUsXG4gIERhdGFUeXBlczogU2VxdWVsaXplLkRhdGFUeXBlc1xuKTogU2VxdWVsaXplLk1vZGVsPGlzc3Vlc0luc3RhbmNlLCBpc3N1ZXNBdHRyaWJ1dGU+ID0+IHtcbiAgY29uc3QgYXR0cmlidXRlczogU2VxdWVsaXplQXR0cmlidXRlczxpc3N1ZXNBdHRyaWJ1dGU+ID0ge1xuICAgIGlkOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUigxMSksXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgcHJpbWFyeUtleTogdHJ1ZSxcbiAgICAgIGF1dG9JbmNyZW1lbnQ6IHRydWVcbiAgICB9LFxuICAgIGNhdGVnb3JpZToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORygyNTUpLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgIH0sXG4gICAgc3ViamVjdDoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORygyNTUpLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgIH0sXG4gICAgZGVzY3JpcHRpb246IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5URVhULFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgIH0sXG4gICAgc3RhdHVzOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuRU5VTShcbiAgICAgICAgJ05ldycsXG4gICAgICAgICdJbiBwcm9ncmVzcycsXG4gICAgICAgICdSZXNvbHZlZCcsXG4gICAgICAgICdGZWVkIGJhY2snLFxuICAgICAgICAnY2xvc2VkJyxcbiAgICAgICAgJ3JlamVjdGVkJ1xuICAgICAgKSxcbiAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9LFxuICAgIHByaW9yaXR5OiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuRU5VTSgnTG93JywgJ05vcm1hbCcsICdIaWdoJywgJ1VyZ2VudCcsICdJbW1lZGlhdGUnKSxcbiAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9LFxuXG4gICAgc3RhcnRfZGF0ZToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLkRBVEUsXG4gICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfSxcbiAgICBkdWVfZGF0ZToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLkRBVEUsXG4gICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfSxcbiAgICBlc3RpbWF0ZWRfdGltZToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIoMTEpLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgIH0sXG4gICAgcHJvZ3Jlc3M6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSKDExKSxcbiAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9LFxuICAgIGZpbGU6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcoMjU1KSxcbiAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9LFxuICAgIHNwZW50X3RpbWU6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSKDExKSxcbiAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9LFxuICAgIGFjdGl2aXR5OiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuRU5VTSgnRGV2ZWxvcG1lbnQnLCAnRGVzaWduJyksXG4gICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfSxcbiAgICB1cGRhdGVkX2J5OiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HKDI1NSksXG4gICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfSxcbiAgICBsaW5rczoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORygyNTUpLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgIH0sXG5cbiAgICBjcmVhdGVkQXQ6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5EQVRFLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgIH0sXG4gICAgdXBkYXRlZEF0OiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuREFURSxcbiAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgSXNzdWVzID0gc2VxdWVsaXplLmRlZmluZTxpc3N1ZXNJbnN0YW5jZSwgaXNzdWVzQXR0cmlidXRlPihcbiAgICAnaXNzdWVzJyxcbiAgICBhdHRyaWJ1dGVzLFxuICAgIHtcbiAgICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZVxuICAgIH1cbiAgKTtcblxuICAvLyAgIGlzc3Vlcy5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XG4gIC8vICAgICBpc3N1ZXMuaGFzTWFueShtb2RlbHMuTWVtYmVyc2lzc3Vlcywge1xuICAvLyAgICAgICBmb3JlaWduS2V5OiAnaXNzdWVzX2lkJ1xuICAvLyAgICAgfSk7XG4gIC8vICAgfTtcblxuICByZXR1cm4gSXNzdWVzO1xufTtcbiJdfQ==