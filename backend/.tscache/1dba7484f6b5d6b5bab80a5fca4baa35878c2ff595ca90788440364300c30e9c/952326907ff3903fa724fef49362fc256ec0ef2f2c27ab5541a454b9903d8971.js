"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectFactory = void 0;
exports.ProjectFactory = (sequelize, DataTypes) => {
    const attributes = {
        id: {
            type: DataTypes.INTEGER(11),
            allowNull: false,
            primaryKey: true,
            autoIncrement: true
        },
        name: {
            type: DataTypes.STRING(255),
            allowNull: false
        },
        subproject: {
            type: DataTypes.STRING(255),
            allowNull: false
        },
        description: {
            type: DataTypes.TEXT,
            allowNull: false
        },
        homePage: {
            type: DataTypes.STRING(255),
            allowNull: false
        },
        public: {
            type: DataTypes.BOOLEAN,
            allowNull: false
        },
        modules: {
            type: DataTypes.ENUM('Issues tracking', 'Issues Wall', 'Calendar', 'Documents'),
            allowNull: false
        },
        createdAt: {
            type: DataTypes.DATE,
            allowNull: false
        },
        updatedAt: {
            type: DataTypes.DATE,
            allowNull: false
        }
    };
    const Project = sequelize.define('project', attributes, {
        freezeTableName: true
    });
    //   Project.associate = (models) => {
    //     Project.hasMany(models.MembersProject, {
    //       foreignKey: 'project_id'
    //     });
    //   };
    return Project;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvYmFzc2VtL0RvY3VtZW50cy9QZXJzb25uZWxfUHJvamVjdC9idWctbWFzdGVyL2JhY2tlbmQvc2VydmVyL21vZGVscy10cy9Qcm9qZWN0LnRzIiwic291cmNlcyI6WyIvaG9tZS9iYXNzZW0vRG9jdW1lbnRzL1BlcnNvbm5lbF9Qcm9qZWN0L2J1Zy1tYXN0ZXIvYmFja2VuZC9zZXJ2ZXIvbW9kZWxzLXRzL1Byb2plY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBa0JhLFFBQUEsY0FBYyxHQUFHLENBQzVCLFNBQThCLEVBQzlCLFNBQThCLEVBQ3NCLEVBQUU7SUFDdEQsTUFBTSxVQUFVLEdBQTBDO1FBQ3hELEVBQUUsRUFBRTtZQUNGLElBQUksRUFBRSxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztZQUMzQixTQUFTLEVBQUUsS0FBSztZQUNoQixVQUFVLEVBQUUsSUFBSTtZQUNoQixhQUFhLEVBQUUsSUFBSTtTQUNwQjtRQUNELElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxTQUFTLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztZQUMzQixTQUFTLEVBQUUsS0FBSztTQUNqQjtRQUNELFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxTQUFTLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztZQUMzQixTQUFTLEVBQUUsS0FBSztTQUNqQjtRQUNELFdBQVcsRUFBRTtZQUNYLElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtZQUNwQixTQUFTLEVBQUUsS0FBSztTQUNqQjtRQUNELFFBQVEsRUFBRTtZQUNSLElBQUksRUFBRSxTQUFTLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztZQUMzQixTQUFTLEVBQUUsS0FBSztTQUNqQjtRQUNELE1BQU0sRUFBRTtZQUNOLElBQUksRUFBRSxTQUFTLENBQUMsT0FBTztZQUN2QixTQUFTLEVBQUUsS0FBSztTQUNqQjtRQUVELE9BQU8sRUFBRTtZQUNQLElBQUksRUFBRSxTQUFTLENBQUMsSUFBSSxDQUNsQixpQkFBaUIsRUFDakIsYUFBYSxFQUNiLFVBQVUsRUFDVixXQUFXLENBQ1o7WUFDRCxTQUFTLEVBQUUsS0FBSztTQUNqQjtRQUVELFNBQVMsRUFBRTtZQUNULElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtZQUNwQixTQUFTLEVBQUUsS0FBSztTQUNqQjtRQUNELFNBQVMsRUFBRTtZQUNULElBQUksRUFBRSxTQUFTLENBQUMsSUFBSTtZQUNwQixTQUFTLEVBQUUsS0FBSztTQUNqQjtLQUNGLENBQUM7SUFFRixNQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsTUFBTSxDQUM5QixTQUFTLEVBQ1QsVUFBVSxFQUNWO1FBQ0UsZUFBZSxFQUFFLElBQUk7S0FDdEIsQ0FDRixDQUFDO0lBRUYsc0NBQXNDO0lBQ3RDLCtDQUErQztJQUMvQyxpQ0FBaUM7SUFDakMsVUFBVTtJQUNWLE9BQU87SUFFUCxPQUFPLE9BQU8sQ0FBQztBQUNqQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcblxuaW1wb3J0IHsgU2VxdWVsaXplQXR0cmlidXRlcyB9IGZyb20gJy4uL3R5cGluZ3MvU2VxdWVsaXplQXR0cmlidXRlcyc7XG5leHBvcnQgaW50ZXJmYWNlIHByb2plY3RBdHRyaWJ1dGUge1xuICBpZDogbnVtYmVyO1xuICBuYW1lPzogc3RyaW5nO1xuICBzdWJwcm9qZWN0Pzogc3RyaW5nO1xuICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgaG9tZVBhZ2U/OiBzdHJpbmc7XG4gIHB1YmxpYz86IHN0cmluZztcbiAgbW9kdWxlcz86IHN0cmluZztcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1cGRhdGVkQXQ6IERhdGU7XG59XG5leHBvcnQgaW50ZXJmYWNlIHByb2plY3RJbnN0YW5jZVxuICBleHRlbmRzIFNlcXVlbGl6ZS5JbnN0YW5jZTxwcm9qZWN0QXR0cmlidXRlPixcbiAgICBwcm9qZWN0QXR0cmlidXRlIHt9XG5cbmV4cG9ydCBjb25zdCBQcm9qZWN0RmFjdG9yeSA9IChcbiAgc2VxdWVsaXplOiBTZXF1ZWxpemUuU2VxdWVsaXplLFxuICBEYXRhVHlwZXM6IFNlcXVlbGl6ZS5EYXRhVHlwZXNcbik6IFNlcXVlbGl6ZS5Nb2RlbDxwcm9qZWN0SW5zdGFuY2UsIHByb2plY3RBdHRyaWJ1dGU+ID0+IHtcbiAgY29uc3QgYXR0cmlidXRlczogU2VxdWVsaXplQXR0cmlidXRlczxwcm9qZWN0QXR0cmlidXRlPiA9IHtcbiAgICBpZDoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIoMTEpLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgICBhdXRvSW5jcmVtZW50OiB0cnVlXG4gICAgfSxcbiAgICBuYW1lOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HKDI1NSksXG4gICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfSxcbiAgICBzdWJwcm9qZWN0OiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HKDI1NSksXG4gICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfSxcbiAgICBkZXNjcmlwdGlvbjoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlRFWFQsXG4gICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfSxcbiAgICBob21lUGFnZToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORygyNTUpLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgIH0sXG4gICAgcHVibGljOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuQk9PTEVBTixcbiAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9LFxuXG4gICAgbW9kdWxlczoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLkVOVU0oXG4gICAgICAgICdJc3N1ZXMgdHJhY2tpbmcnLFxuICAgICAgICAnSXNzdWVzIFdhbGwnLFxuICAgICAgICAnQ2FsZW5kYXInLFxuICAgICAgICAnRG9jdW1lbnRzJ1xuICAgICAgKSxcbiAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9LFxuXG4gICAgY3JlYXRlZEF0OiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuREFURSxcbiAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9LFxuICAgIHVwZGF0ZWRBdDoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLkRBVEUsXG4gICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IFByb2plY3QgPSBzZXF1ZWxpemUuZGVmaW5lPHByb2plY3RJbnN0YW5jZSwgcHJvamVjdEF0dHJpYnV0ZT4oXG4gICAgJ3Byb2plY3QnLFxuICAgIGF0dHJpYnV0ZXMsXG4gICAge1xuICAgICAgZnJlZXplVGFibGVOYW1lOiB0cnVlXG4gICAgfVxuICApO1xuXG4gIC8vICAgUHJvamVjdC5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XG4gIC8vICAgICBQcm9qZWN0Lmhhc01hbnkobW9kZWxzLk1lbWJlcnNQcm9qZWN0LCB7XG4gIC8vICAgICAgIGZvcmVpZ25LZXk6ICdwcm9qZWN0X2lkJ1xuICAvLyAgICAgfSk7XG4gIC8vICAgfTtcblxuICByZXR1cm4gUHJvamVjdDtcbn07XG4iXX0=