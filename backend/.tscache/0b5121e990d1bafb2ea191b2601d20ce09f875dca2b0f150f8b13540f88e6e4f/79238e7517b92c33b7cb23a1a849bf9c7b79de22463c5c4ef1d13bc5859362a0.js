"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PassengerLuggageFactory = void 0;
exports.PassengerLuggageFactory = (sequelize, DataTypes) => {
    const attributes = {
        id: {
            type: DataTypes.INTEGER(11),
            allowNull: false,
            primaryKey: true,
            autoIncrement: true,
        },
        hand_luggage: {
            type: DataTypes.INTEGER(11),
            allowNull: false,
        },
        bag: {
            type: DataTypes.INTEGER(11),
            allowNull: false,
        },
        createdAt: {
            type: DataTypes.DATE,
            allowNull: false,
        },
        updatedAt: {
            type: DataTypes.DATE,
            allowNull: false,
        },
    };
    const PassengerLuggage = sequelize.define('passenger_luggage', attributes, {
        freezeTableName: true,
    });
    PassengerLuggage.associate = (models) => {
        PassengerLuggage.belongsTo(models.UsualCustomer, {
            foreignKey: 'id',
        });
    };
    return PassengerLuggage;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL3Zhci93d3cvaHRtbC9hcGlfdHJhbnNmZXJzL3NlcnZlci9tb2RlbHMtdHMvUGFzc2VuZ2VyTHVnZ2FnZS50cyIsInNvdXJjZXMiOlsiL3Zhci93d3cvaHRtbC9hcGlfdHJhbnNmZXJzL3NlcnZlci9tb2RlbHMtdHMvUGFzc2VuZ2VyTHVnZ2FnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFnQmEsUUFBQSx1QkFBdUIsR0FBRyxDQUNyQyxTQUE4QixFQUM5QixTQUE4QixFQUN3QyxFQUFFO0lBQ3hFLE1BQU0sVUFBVSxHQUFtRDtRQUNqRSxFQUFFLEVBQUU7WUFDRixJQUFJLEVBQUUsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDM0IsU0FBUyxFQUFFLEtBQUs7WUFDaEIsVUFBVSxFQUFFLElBQUk7WUFDaEIsYUFBYSxFQUFFLElBQUk7U0FDcEI7UUFDRCxZQUFZLEVBQUU7WUFDWixJQUFJLEVBQUUsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDM0IsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFDRCxHQUFHLEVBQUU7WUFDSCxJQUFJLEVBQUUsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDM0IsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFDRCxTQUFTLEVBQUU7WUFDVCxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7WUFDcEIsU0FBUyxFQUFFLEtBQUs7U0FDakI7UUFDRCxTQUFTLEVBQUU7WUFDVCxJQUFJLEVBQUUsU0FBUyxDQUFDLElBQUk7WUFDcEIsU0FBUyxFQUFFLEtBQUs7U0FDakI7S0FDRixDQUFDO0lBRUYsTUFBTSxnQkFBZ0IsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUd2QyxtQkFBbUIsRUFBRSxVQUFVLEVBQUU7UUFDakMsZUFBZSxFQUFFLElBQUk7S0FDdEIsQ0FBQyxDQUFDO0lBQ0gsZ0JBQWdCLENBQUMsU0FBUyxHQUFHLENBQUMsTUFBTSxFQUFFLEVBQUU7UUFDdEMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUU7WUFDL0MsVUFBVSxFQUFFLElBQUk7U0FDakIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0lBQ0YsT0FBTyxnQkFBZ0IsQ0FBQztBQUMxQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcblxuaW1wb3J0IHsgU2VxdWVsaXplQXR0cmlidXRlcyB9IGZyb20gJy4uL3R5cGluZ3MvU2VxdWVsaXplQXR0cmlidXRlcyc7XG5pbXBvcnQgeyB1c3VhbEN1c3RvbWVyQXR0cmlidXRlLCB1c3VhbEN1c3RvbWVySW5zdGFuY2UgfSBmcm9tICcuL1VzdWFsQ3VzdG9tZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIHBhc3Nlbmdlckx1Z2dhZ2VBdHRyaWJ1dGUge1xuICBpZDogbnVtYmVyO1xuICBoYW5kX2x1Z2dhZ2U/OiBudW1iZXI7XG4gIGJhZz86IG51bWJlcjtcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1cGRhdGVkQXQ6IERhdGU7XG59XG5leHBvcnQgaW50ZXJmYWNlIHBhc3Nlbmdlckx1Z2dhZ2VJbnN0YW5jZVxuICBleHRlbmRzIFNlcXVlbGl6ZS5JbnN0YW5jZTxwYXNzZW5nZXJMdWdnYWdlQXR0cmlidXRlPixcbiAgICBwYXNzZW5nZXJMdWdnYWdlQXR0cmlidXRlIHt9XG5cbmV4cG9ydCBjb25zdCBQYXNzZW5nZXJMdWdnYWdlRmFjdG9yeSA9IChcbiAgc2VxdWVsaXplOiBTZXF1ZWxpemUuU2VxdWVsaXplLFxuICBEYXRhVHlwZXM6IFNlcXVlbGl6ZS5EYXRhVHlwZXNcbik6IFNlcXVlbGl6ZS5Nb2RlbDxwYXNzZW5nZXJMdWdnYWdlSW5zdGFuY2UsIHBhc3Nlbmdlckx1Z2dhZ2VBdHRyaWJ1dGU+ID0+IHtcbiAgY29uc3QgYXR0cmlidXRlczogU2VxdWVsaXplQXR0cmlidXRlczxwYXNzZW5nZXJMdWdnYWdlQXR0cmlidXRlPiA9IHtcbiAgICBpZDoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIoMTEpLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgICBhdXRvSW5jcmVtZW50OiB0cnVlLFxuICAgIH0sXG4gICAgaGFuZF9sdWdnYWdlOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUigxMSksXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgIH0sXG4gICAgYmFnOiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuSU5URUdFUigxMSksXG4gICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgIH0sXG4gICAgY3JlYXRlZEF0OiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuREFURSxcbiAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgfSxcbiAgICB1cGRhdGVkQXQ6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5EQVRFLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICB9LFxuICB9O1xuXG4gIGNvbnN0IFBhc3Nlbmdlckx1Z2dhZ2UgPSBzZXF1ZWxpemUuZGVmaW5lPFxuICAgIHBhc3Nlbmdlckx1Z2dhZ2VJbnN0YW5jZSxcbiAgICBwYXNzZW5nZXJMdWdnYWdlQXR0cmlidXRlXG4gID4oJ3Bhc3Nlbmdlcl9sdWdnYWdlJywgYXR0cmlidXRlcywge1xuICAgIGZyZWV6ZVRhYmxlTmFtZTogdHJ1ZSxcbiAgfSk7XG4gIFBhc3Nlbmdlckx1Z2dhZ2UuYXNzb2NpYXRlID0gKG1vZGVscykgPT4ge1xuICAgIFBhc3Nlbmdlckx1Z2dhZ2UuYmVsb25nc1RvKG1vZGVscy5Vc3VhbEN1c3RvbWVyLCB7XG4gICAgICBmb3JlaWduS2V5OiAnaWQnLFxuICAgIH0pO1xuICB9O1xuICByZXR1cm4gUGFzc2VuZ2VyTHVnZ2FnZTtcbn07XG4iXX0=